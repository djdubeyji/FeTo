AJS.test.require("jira.webresources:util-lite",(function(){"use strict";var e,t=sinon.assert;module("Assistive",{setup:function(){this.context=AJS.test.mockableModuleContext();this.sandbox=sinon.sandbox.create();this.sandbox.useFakeTimers();this.divStub=function(){var e=sinon.stub(),t=sinon.stub(),n={innerText:"",textContent:"",setAttribute:sinon.stub(),innerTextStub:e,textContentStub:t};Object.defineProperty(n,"innerText",{set:e});Object.defineProperty(n,"textContent",{set:t});return n}();this.sandbox.stub(document,"createElement").returns(this.divStub);this.sandbox.stub(document.body,"appendChild");e=this.context.require("jira/util/assistive")},teardown:function(){this.sandbox.restore()}});test("#wait should execute a callback with timeout needed for screen reader to react",(function(){var n=sinon.spy();e.wait(n);t.notCalled(n);this.sandbox.clock.tick(50);t.calledOnce(n)}));test("#readText should create element and set it's text on first call",(function(){e.readText("test");t.calledOnce(document.createElement);equal(this.divStub.textContentStub.lastCall.args[0]," ","Element's content is empty.");this.sandbox.clock.tick(50);equal(this.divStub.textContentStub.lastCall.args[0],"test","Element's content is set to the parameter value.")}));test("#readText should use existing element and set it's text on 2nd+ call",(function(){e.readText("test");this.sandbox.clock.tick(50);t.calledOnce(document.createElement);e.readText("test2");t.calledOnce(document.createElement);this.sandbox.clock.tick(50);equal(this.divStub.textContentStub.lastCall.args[0],"test2","Element's content is set to the parameter value.")}));test("#readText set element's text using innerText in IE",(function(){this.context.mock("jira/util/navigator",{isIE:function(){return!0}});this.context.require("jira/util/assistive").readText("test");this.sandbox.clock.tick(50);t.calledTwice(this.divStub.innerTextStub);t.notCalled(this.divStub.textContentStub)}));test("#readText set element's text using textContent in other browsers",(function(){e.readText("test");this.sandbox.clock.tick(50);t.notCalled(this.divStub.innerTextStub);t.calledTwice(this.divStub.textContentStub)}));test("#createOrUpdateLabel should create element with consecutive id and set it's text when called without id",(function(){e.createOrUpdateLabel("test");t.calledOnce(document.createElement);equal(this.divStub.textContentStub.lastCall.args[0],"test","Element's content is empty.");t.calledWith(this.divStub.setAttribute,"id","label-0");e.createOrUpdateLabel("test2");t.calledTwice(document.createElement);equal(this.divStub.textContentStub.lastCall.args[0],"test2","Element's content is empty.");t.calledWith(this.divStub.setAttribute,"id","label-1")}));test("#createOrUpdateLabel should create element with specific and set it's text on first call when called with id",(function(){e.createOrUpdateLabel("test","custom-id");t.calledOnce(document.createElement);equal(this.divStub.textContentStub.lastCall.args[0],"test","Element's content is empty.");t.calledWith(this.divStub.setAttribute,"id","custom-id")}));test("#createOrUpdateLabel should use existing element and set it's text on 2nd+ call when called with id",(function(){e.createOrUpdateLabel("test","custom-id");t.calledOnce(document.createElement);equal(this.divStub.textContentStub.lastCall.args[0],"test","Element's content is empty.");t.calledWith(this.divStub.setAttribute,"id","custom-id");this.sandbox.stub(document,"getElementById").withArgs("custom-id").returns(this.divStub);e.createOrUpdateLabel("test2","custom-id");t.calledOnce(document.createElement);equal(this.divStub.textContentStub.lastCall.args[0],"test2","Element's content is empty.")}));test("#createOrUpdateLabel should set element's text using innerText in IE",(function(){this.context.mock("jira/util/navigator",{isIE:function(){return!0}});this.context.require("jira/util/assistive").createOrUpdateLabel("test");this.sandbox.clock.tick(50);t.calledOnce(this.divStub.innerTextStub);t.notCalled(this.divStub.textContentStub)}));test("#createOrUpdateLabel should set element's text using textContent in other browsers",(function(){e.createOrUpdateLabel("test");this.sandbox.clock.tick(50);t.notCalled(this.divStub.innerTextStub);t.calledOnce(this.divStub.textContentStub)}));test("#handleSpaceEnter should call the callback on Space or Enter, but ignore other keypresses",(function(){var t=sinon.spy();e.handleSpaceEnter(new KeyboardEvent("keydown",{key:" "}),t);equal(t.callCount,1,"callback called for Spacebar key");e.handleSpaceEnter(new KeyboardEvent("keydown",{key:"Enter"}),t);equal(t.callCount,2,"callback called for Enter key");e.handleSpaceEnter(new KeyboardEvent("keydown",{key:"Tab"}),t);equal(t.callCount,2,"callback NOT called for Tab key")}));test("#handleSpaceEnter should do event.target.click() when callback is not provided",(function(){var n=new KeyboardEvent("keydown",{key:" "}),a=new EventTarget;a.click=sinon.spy();a.addEventListener("keydown",e.handleSpaceEnter);a.dispatchEvent(n);t.calledOnce(a.click)}));test("#handleClickSpaceEnter should call the callback on mouse click, Space and Enter, but ignore other keypresses",(function(){var t=sinon.spy();e.handleClickSpaceEnter(new MouseEvent("click"),t);equal(t.callCount,1,"callback called for a mouse click");e.handleClickSpaceEnter(new KeyboardEvent("keydown",{key:" "}),t);equal(t.callCount,2,"callback called for Spacebar key");e.handleClickSpaceEnter(new KeyboardEvent("keydown",{key:"Enter"}),t);equal(t.callCount,3,"callback called for Enter key");e.handleClickSpaceEnter(new KeyboardEvent("keydown",{key:"Tab"}),t);equal(t.callCount,3,"callback NOT called for Tab key")}));module("Assistive configureRovingTabindex",{setup:function(){document.getElementById("qunit-fixture").innerHTML="<button id='dummy1'>Dummy 1</button><div id='toolbar'><button id='bold'>Bold</button><button id='italic'>Italic</button><button id='underline'>Underline</button><a href='#' id='insert-link'>Insert link</a><a href='#' id='insert-attachment'>Insert attachment</a></div><button id='dummy2'>Dummy 2</button>"},teardown:function(){document.getElementById("qunit-fixture").innerHTML=""}});test("#configureRovingTabindex should add tabindex='0' on the container and tabindex='-1' to inner items",(function(){var t=document.getElementById("toolbar");e.configureRovingTabindex(t);equal(t.getAttribute("tabindex"),0,"Toolbar should have tabindex='0' as an entry-point");equal(t.querySelectorAll("[tabindex='-1']").length,5,"Toolbar items should have tabindex='-1' by default")}));test("#configureRovingTabindex should operate with focus correctly",(function(){var t=document.getElementById("toolbar");e.configureRovingTabindex(t);t.focus();var n=document.getElementById("bold");equal(document.activeElement,n,"Focus should move to the first item after focusing the container");equal(t.getAttribute("tabindex"),-1,"Toolbar should have tabindex='-1' when focus is inside");equal(n.getAttribute("tabindex"),0,"Active item should have tabindex='0'");t.dispatchEvent(new KeyboardEvent("keydown",{key:"ArrowRight"}));var a=document.getElementById("italic");equal(document.activeElement,a,"Focus should move to the next item after pressing Arrow Right");t.dispatchEvent(new KeyboardEvent("keydown",{key:"ArrowLeft"}));t.dispatchEvent(new KeyboardEvent("keydown",{key:"ArrowLeft"}));var i=document.getElementById("insert-attachment");equal(document.activeElement,i,"Focus should move to the last item after pressing Arrow Left for two times");var l=new Event("focusout");l.relatedTarget=document.getElementById("dummy2");t.dispatchEvent(l);equal(t.getAttribute("tabindex"),0,"Toolbar should have tabindex='0' as an entry-point");equal(t.querySelectorAll("[tabindex='-1']").length,5,"Toolbar items should have tabindex='-1' when the focus is not inside")}));test("#configureRovingTabindex cleanup works correctly",(function(){var t=document.getElementById("toolbar");e.configureRovingTabindex(t)();equal(t.getAttribute("tabindex"),null,"Toolbar shouldn't have tabindex after cleanup");equal(t.querySelectorAll("[tabindex='0']").length,5,"Toolbar items should have tabindex='0' after cleanup")}))}));