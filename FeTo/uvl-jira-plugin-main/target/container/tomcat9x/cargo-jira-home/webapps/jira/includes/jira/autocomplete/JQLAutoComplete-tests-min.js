AJS.test.require(["jira.webresources:jqlautocomplete"],(function(){"use strict";var e=require("jira/jql/jql-parser"),r=require("jira/autocomplete/jql-autocomplete"),o=require("jira/terminology-feature-service"),i=require("jquery"),t="PARSE_FAIL",a="SUCCESS",n="{}*/%+$#@?;",s=["abort","access","add","after","alias","all","alter","and","any","as","asc"],p=["greater","for","privileges","float","validate","distinct","of","break","defaults","byte","initial","file","noaudit","empty","on","false","boolean","right","option","decrement","limit","else","increment","fetch","equals","or","number","table","like","create","row","declare","not","trans","asc","start","session","then","view","strict","explain","go","unique","desc","raise","exclusive","before","next","inout","goto","date","nowait","escape","mode","character","rownum","union","encoding","delete","current","whenever","left","do","null","end","min","trigger","intersection","define","max","previous","integer","sqrt","return","true","checkpoint","divide","join","access","alter","field","delimiter","string","exists","modulo","having","public","insert","abort","uid","to","last","grant","count","transaction","synonym","inner","char","drop","rename","collate","by","where","long","identified","prior","function","revoke","after","remainder","values","more","commit","when","any","power","notin","returns","avg","index","execute","minus","select","int","double","size","rows","and","difference","input","default","isempty","intersect","column","exec","output","cf","update","raw","connect","set","catch","sum","object","from","add","collation","while","share","order","isnull","if","less","between","all","with","is","check","alias","resource","lock","into","modify","audit","as","multiply","in","decimal","begin","subtract","immediate","outer","continue","group","user","rowid","first"];function l(r,o){test("test query: "+r,(function(){var i=e(p).parse(r);o===t?ok(i.parseError,"Expected parsing to fail"):ok(!i.parseError,"Expected parsing to be successful")}))}var u=void 0;module("Test parser");l('priority = "qwerty"',a);l('priority = "qwerty"',a);l('priority="qwerty"',a);l("priority=qwerty",a);l("  priority=qwerty  ",a);l("priority=     qwerty order      by priority, other",a);l("coolness >= awesome",a);l("coolness > awesome",a);l("coolness < awesome",a);l("coolness <= awesome",a);l("coolness        !=       awesome order     by     coolness desc",a);l('language in (java, c, "python2")',a);l('languagein   IN    (   java, c     , "python2")',a);l('inlanguage in (java, c, "python2")',a);l('pri in (java,c,"python2")',a);l("pri in(java)",a);l("pri In(java)",a);l("pri iN(java)",a);l('language not in (java, c, "python2")',a);l('languagein  NOT   IN    (   java, c     , "python2")',a);l('inlanguage not in (java, c, "python2")',a);l('pri NOT in (java,c,"python2")',a);l("pri not in(java)",a);l("pri NoT In(java)",a);l("pri nOT iN(java)",a);l("pri ~ stuff",a);l("pri~stuff",a);l("pri ~ 12",a);l("pri~12",a);l('pri ~ ("stuff", 12)',a);l("pri !~ stuff",a);l("pri!~stuff",a);l("pri !~ 12",a);l("pri!~12",a);l('pri !~ ("stuff", 12)',a);l("pri IS stuff",a);l("pri is stuff",a);l("pri IS EMPTY",a);l("pri IS NOT stuff",a);l("pri IS not stuff",a);l("pri is Not stuff",a);l("pri is not stuff",a);l("pri iN((java), duke)",a);l("priority = 12345",a);l("priority = -12345",a);l('priority = "12a345"',a);l("priority = 12345a",a);l("cf[12345] = 12345a",a);l("Cf  [ 0005 ] = x",a);l('priority = "12345"',a);l('priority="12a345"',a);l("testfield = EMPTY",a);l("testfield = empty",a);l("testfield = NULL",a);l("testfield = null",a);l('testfield = "null"',a);l('testfield = "NULL"',a);l('testfield = "EMPTY"',a);l('testfield = "empty"',a);l('priority = "a big string ~ != foo and priority = haha "',a);l('priority = ""',a);l("prior\\'ty = testvalue",a);l("priority\\ ty=testvalue",a);l("priority⻥ > 6",a);l("priori\\nty\\u2ee5 > 6",a);l("\\     < 38",a);l('"this is a strange field " = google',a);l("\"don't\" = 'true'",a);l('"don\\"t" = \'false\'',a);l("'don\"t' = 'false'",a);l("'cf[1220]' = abc",a);l("'cf' = abc",a);l("10245948 = abc      order          by 10245948",a);l("-10245948 = abc",a);l("new\\nline = abc",a);l("some\\u0082control = abc  order by some\\u0082control",a);l("b = ''",a);l("b = \\ ",a);l("b = don\\'t\\ stop\\ me\\ now",a);l("b = ⻥",a);l("b = \\u2EE5jkdfskjfd",a);l("b not in 'jack says, \"Hello World!\"'",a);l("b not in 'jack says, \\'Hello World!\\''",a);l("b not in \"jack says, 'Hello World!'\"",a);l('b not in "jack says, \\"Hello World!\'\\""',a);l('b not in "jack says, \\tnothing"',a);l("bad ~ wt\\u007f",a);l('priority = "a \\n new \\r line"',a);l('priority = "Tab:\\t NewLine:\\n Carrage Return:\\r"',a);l('priority = "Quote:\\" Single:\\\' Back Slash:\\\\ Space:\\ "',a);l('priority = "Unicode: \\ufeeF1 Unicode2: \\u6EEF"',a);l("priority = 'Escape\" don\\'t'",a);l('priority = "Escape\' don\\"t"',a);l("priority = higherThan(Major)",a);l('priority In     randomName(Major, Minor,      "cool", -65784)',a);l("priority    >=    randomName()",a);l("pri not in fun(name\\u0082e)",a);l("a = func\\'  ()",a);l("a = fu\\\"nc\\'()",a);l("a=function\\ name(  )",a);l("a = ⻥()",a);l("a = somereallystrangestring\\u2ee5()",a);l('version <= "affected\\ versions"(   )',a);l('version <= "affected\\ versio\'ns"(   )',a);l('version <= "affected versio\\"ns"(   )',a);l("version <= 'my messed up versio\\'ns'     (   )",a);l("version <= 'my m\\nessed up\\ versio\"ns'     (   )",a);l("version <= 4759879855`(   )",a);l("version <= 4759879(   )",a);l("version = badname\\u0091",a);l("a=b&c=d",a);l("a=b&&c=d",a);l("a=b|c=d",a);l("a=b||c=d",a);l("a<b",a);l("a>b",a);l("a~b",a);l("priority = major and foo > bar()",a);l("priority = majorand and foo>bar()",a);l("priority = major and foo > bar()",a);l("priority != major    and      foo >      bar()",a);l("priority != major    &&      foo >      bar()",a);l("priority != andmajor    &      foo >      bar()",a);l("priority != andmajor    and      foo >      bar() order by priority     DESC,      foo",a);l("a =b",a);l("a !=b",a);l("a >=b",a);l("a <=b",a);l("a !~b",a);l("a ~b",a);l("priority = major or foo > bar()",a);l("priority = major or foo > bar()",a);l("priority = major or foo > bar() or priority = minor",a);l("priority = major || foo > bar() | priority = minor",a);l("priority = major or foo > bar() || priority = minor",a);l("priority = major and foo > bar(1,2,3) or priority = minor and baz != 1234",a);l("priority =     major AND foo > bar(1,2,3) oR priority = minor and baz != 1234",a);l("priority=major and foo>bar(1,2,3)|| priority=minor  and  baz!=1234",a);l("priority = major AND foo > bar(1,2,3) Or priority = minor AND baz != 1234",a);l("priority = major && foo > bar(1,2,3) AND priority = minor and baz != 1234",a);l("priority = major and (foo > bar(1,2,3) OR priority = minor) and baz != 1234",a);l("priority = major or (foo > bar(1,2,3) or priority = minor) and baz != 1234",a);l("not priority = major or foo > bar() or priority = minor",a);l('not priority = major or foo > bar() AnD priority="minor"',a);l('not priority = major or not foo > bar() AnD priority="minor"',a);l('not (priority = major or not foo > bar()) AnD priority="minor"',a);l('! (priority = major or ! foo > bar()) AnD priority="minor"',a);l("! (priority changed from major or ! foo > bar()) AnD priority changed to minor",a);l('not not (not priority = major or     foo >bar()) and         priority="minor"',a);for(u=0;u<11;u++)l("'"+("test"+n.charAt(u)+"dfjd")+"' = 'good'",a);l("order by crap",a);l("order by crap  DESC",a);l("order by crap  ASC",a);l("",a);l('affectedVersion = "New Version 1" order by affectedVersion         ASC,         affectedVersion       DESC, cf[1234]  DESC    ',a);l('(not (resolutiondate <= "2008-01-01") and (type in (Improvement)) or "Priority for beta phase" = 3) and\nassignee = currentUser() order by status',a);l('(not (resolutiondate <= "2008-01-01") and (type in (Improvement)) or "Priority for beta phase" = 3) or\nassignee = currentUser() order by status',a);l('(not (resolutiondate <= "2008-01-01") and (type in (Improvement)) or "Priority for beta phase" = 3) and not\nassignee = currentUser() order by status',a);l("issue.property[x]=y",a);l("issue.property[x.y].test.path = y",a);l("issue.property[x.y].test.path = y.a",a);l("issue.property = y",t);l("issue.property",t);l("issue.property[.x] = y",t);l("issue.property[x] = x",a);l("issue.property[issue.status] = resolved",a);l('ISSUE.property["issue.status"] = resolved',a);l("issue.property['issue.status'] = resolved",a);l("issue.property     ['issue.status'] = resolved",a);l("issue.property['1@4s'] = resolved",a);l("issue.property[1234] = resolved",a);l("issue.property[-1234] = resolved",a);l("issue.property.x = y",t);l("issue.ProPeRty['-@,@'] = resolved",a);l("comment.prop[author]= filip",t);l("comment.prop[author]..a= filip",t);l("version = 1.2.3",a);l("       ",t);l("foo",t);l("foo=",t);l("=",t);l("!=",t);l("foo bar and 78foo = bar",t);l("and and",t);l("a=b a=b",t);l("foo=bar and",t);l("foo=bar and and",t);l("foo=bar and 78foo",t);l("foo=bar and 78foo=",t);l("foo=bar and \n78foo",t);l("foo=bar and 78foo brenden and a=b",t);l("foo=bar and \n78foo brenden and a=b",t);l("foo=bar and not",t);l("foo=bar and not foo =",t);l("not",t);l("not not",t);l("a=b and not not=b",t);l("a=b not a=b",t);l("(",t);l("abc = ()",t);l("abc ~ ()",t);l("abc = )foo(",t);l("abc in (foo",t);l("abc in (foo(",t);l("abc IN ((foo)",t);l("abc in (foo))",t);l("abc in ((fee, fie, foe, fum), 787, (34, (45))",t);l("priority = 12345=== not p jfkff fjfjfj",t);l("priority = 12345 jfkff fjfjfj",t);l("priority=a jfkff=fjfjfj",t);l("priority=12345 jfkff=fjfjfj",t);l("a=b ,b",t);l("a=b,b",t);l("a inb",t);l("a isb",t);l("a is notb",t);l("a not inb",t);for(u=0;u<s.length;u++){l(s[u]+" = stuff",t);l("stuff = "+s[u],t)}l("cf[1234 = x",t);l("cf1234] = x",t);l("cf[z123] = x",t);l("cf[-123] = x",t);l("cf[] = x",t);l("[54] = x",t);l("pri notin (x)",t);l("pri isnot empty",t);l("pri ^ empty",t);l("pri ! in (test)",t);l("pri is ! empty",t);l('priority = """',t);l('priority = "',t);l("priority = '''",t);l("priority = '",t);l("what = hrejw'ewjrhejkw",t);l('wh"at = hrejwewjrhejkw',t);l("'' = bad",t);l('"" = bad',t);l("a = ''()",t);l('b = ""()',t);l("test = case\\",t);l("test = case\\k",t);l("test = case\\u",t);l("test = case\\u278q",t);l("test = case\\u27",t);l("test = case\\u-998",t);l("test = case order by \\u-998",t);l("test = case\\uzzzz",t);l("test = case\\u278qzzzz",t);l("test = case\\u27zzzzz",t);l("tecase\\u-998zzzzz",t);l("case order by \\u-998zzzzz",t);l("cf = brenden",t);l("cf = broken",t);l("\0iuyiuyiu",t);l("aa = order by ",t);l("cont\nrol = ''",t);l("control = f\run()",t);l("a = b order by",t);l("a = b order bya",t);l("a = b order",t);l("a = b order BY abc desc, ",t);l("a = b order BY abc desc,qq,",t);l("a = b order BY abc qq asc,",t);l("a = b ANDaffectedVersion=hello",t);l("a = b ORaffectedVersion=hello",t);l("a = b ORNOTaffectedVersion=hello",t);for(u=0;u<11;u++)l("test"+n.charAt(u)+"dfjd = 'bad'",t);l("f\n = \n \n abc *",t);l("f *= abc",t);var c=[{auto:!0,cfid:"cf[10008]",displayName:"Sprint - cf[10008]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["com.atlassian.greenhopper.service.sprint.Sprint"],value:"Sprint"},{auto:!0,cfid:"cf[10008]",displayName:"Potato (Sprint) - cf[10008]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["com.atlassian.greenhopper.service.sprint.Sprint"],value:"Sprint"},{cfid:"cf[10006]",displayName:"Epic Colour - cf[10006]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["java.lang.String"],value:"Epic Colour"},{cfid:"cf[10006]",displayName:"Orange Colour (Epic Colour) - cf[10006]",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["java.lang.String"],value:"Epic Colour"},{auto:!0,displayName:"issuetype",operators:["=","!=","in","not in","is","is not"],orderable:!0,searchable:!0,types:["com.atlassian.jira.issue.issuetype.IssueType"],value:"issuetype"}],f=[{originalName:"sprint",newName:"Potato",newNamePlural:"Buggies"},{originalName:"epic",newName:"Orange",newNamePlural:"Oranges"}];module("Terminology Hint",{setup:function(){var e=this,r=i('<textarea id="jql-search"/>');this.sandbox=sinon.sandbox.create();this.clock=this.sandbox.useFakeTimers();this.server=this.sandbox.useFakeServer();this.server.autoRespond=!0;this.server.respondWith(new RegExp("/jql/autocompletedata/suggestions\\?fieldName=issuetype&fieldValue=(.*?)&_=\\d*$"),(function(e,r){var o=r?'{"results":[{"value":"Epic","displayName":"<b>Or</b>ange (Epic)"}]}':'{"results":[{"value":"Bug","displayName":"Bug"},{"value":"Epic","displayName":"Epic"},{"value":"Epic","displayName":"Orange (Epic)"},{"value":"Story","displayName":"Story"},{"value":"Sub-task","displayName":"Sub-task"},{"value":"Task","displayName":"Task"}]}';e.respond(200,{"Content-Type":"application/json"},o)}));this.isTerminologyActive=!0;this.sandbox.stub(o,"isTerminologyActiveForUser",(function(){return e.isTerminologyActive}));this.sandbox.stub(o,"getTerminologyEntries").returns(f);this.$fixture=i("#qunit-fixture");r.appendTo(this.$fixture)},teardown:function(){this.sandbox.restore()},initializeJQLAutocomplete:function(o){this.jqlAutoComplete=new r({fieldID:"jql-search",parser:new e(p),jqlFieldNames:c,jqlFunctionNames:[],suggestionsLimit:o});this.jqlAutoComplete.buildResponseContainer()}});test("does not display terminology hint when terminology is not active",(function(){this.isTerminologyActive=!1;this.initializeJQLAutocomplete();this.jqlAutoComplete.dispatcher("bug");notOk(this.$fixture.find(".terminology-help-container").length)}));test("displays terminology hint when a single term has matching suggestions",(function(){this.initializeJQLAutocomplete(2);this.jqlAutoComplete.dispatcher("bug");var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length);equal(r,"jira.terminology.jqlautocomplete.hint.single")}));test("displays terminology hint for epic and sprints combined when there are matching suggestions",(function(){this.initializeJQLAutocomplete();this.jqlAutoComplete.dispatcher("lol");var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length);equal(r,"jira.terminology.jqlautocomplete.hint.multiple")}));test("displays terminology hint for issuetype value suggestions",(function(){this.initializeJQLAutocomplete();this.jqlAutoComplete.field.val("issuetype = ");this.jqlAutoComplete.dispatcher("issuetype = ");this.clock.tick(50);var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length);equal(r,"jira.terminology.jqlautocomplete.hint.single")}));test("displays terminology hint while filtering issuetype value suggestions",(function(){this.initializeJQLAutocomplete();this.jqlAutoComplete.field.val("issuetype = Or");this.jqlAutoComplete.dispatcher("issuetype = Or");this.clock.tick(50);var e=this.$fixture.find(".terminology-help-container"),r=e.find("p.syntax-help span").text();ok(e.length);equal(r,"jira.terminology.jqlautocomplete.hint.single")}))}));