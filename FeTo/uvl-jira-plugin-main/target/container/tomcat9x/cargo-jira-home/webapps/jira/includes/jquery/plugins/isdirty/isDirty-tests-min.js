AJS.test.require(["jira.webresources:jira-global"],(function(){var t=require("jquery"),e=require("jira/jquery/plugins/isdirty"),i="ajs-dirty-warning-exempt";module("Dirty Forms",{teardown:function(){t("form").remove()}});function a(){return t("<form action='javascript:void(0)'></form>").appendTo("body")}function n(){for(var e=t("<form/>").appendTo("body"),i=0,a=arguments.length;i<a;i++)e.append(arguments[i]);return e}test("An empty form cannot be dirty",(function(){var t=a().isDirty();equal(t,!1,"Empty form cannot be dirty")}));test("A form with class 'ajs-dirty-warning-exempt' cannot be dirty, even if it has dirty fields",(function(){var t=a();t.addClass(i);t.find("input").val("another value");var e=t.isDirty();equal(e,!1,"Form with class 'ajs-dirty-warning-exempt' cannot be dirty")}));test("A form can be rendered as dirty by default",(function(){var t=n("<input type='text' name='valid' value=''>");t.addClass("ajs-dirty-warning-by-default");equal(t.isDirty(),!0,"Form should be dirty if specific class was added")}));test("The form of an input with class 'ajs-dirty-warning-exempt' cannot be dirty",(function(){var t=n("<input type='text' name='input1' value='someValue'>").find("input").addClass(i);t.val("another value");var e=t.isDirty();equal(e,!1,"Form with an element with class 'ajs-dirty-warning-exempt' cannot be dirty")}));test("The form of an input with class 'ajs-dirty-warning-exempt' is dirty if it contains a dirty field without the class 'ajs-dirty-warning-exempt'",(function(){var t=n("<input type='text' name='cleanInput' value='someValue'><input type='text' name='dirtyInput' value='anotherValue'/>");t.find("input[name=cleanInput]").addClass(i);t.find("input[name=dirtyInput]").val("changed value");var e=t.isDirty();equal(e,!0,"A form containing a clean field with excempt class and a dirty field without exempt class is dirty.")}));test("A clean field is clean even if its form contains a dirty field",(function(){var t=n("<input type='text' name='cleanInput' value='someValue'><input type='text' name='dirtyInput' value='anotherValue'/>"),e=t.find("input[name=cleanInput]");t.find("input[name=dirtyInput]").val("changed value");var i=e.isDirty();equal(i,!1,"A clean field is clean even if its form contains a dirty field")}));test("A form containing a dirty, but invisible, field is not dirty",(function(){var e=t("<input style='display:none' type='text' name='dirtyHiddenField' value='someValue'>"),i=n(e);e.val("changed value");var a=i.isDirty();equal(a,!1,"A form containing a dirty, but invisible, field is not dirty")}));test("A form containing a dirty, invisible, but sanctioned element is dirty",(function(){var i=t("<input style='display:none' type='text' name='dirtyHiddenField' value='someValue'>"),a=n(i);i.addClass(e.ClassNames.SANCTIONED);i.val("changed value");var r=a.isDirty();equal(r,!0,"A form containing a dirty, invisible, but sanctioned field is dirty")}));test("Hidden form elements never have default values, so are always clean",(function(){var i="someValue",a="changed value",r=t("<input type='hidden' name='hiddenInputField' value='"+i+"'>"),l=r.clone(!0),d=n(r,l);equal(r[0].defaultValue,i,"The default value is currently set to the old value");r.val(a);l.addClass(e.ClassNames.SANCTIONED);l.val(a);var u=d.isDirty();equal(u,!1,"The form shouldn't be dirty");equal(r[0].value,a,"The value of the hidden field was set correctly");notEqual(r[0].defaultValue,i,"The default value should not remain the same, since hidden fields have no defaultValue");equal(r[0].defaultValue,a,"The default value was updated as per the DOM specification");equal(l[0].defaultValue,a,"Even sanctioning a hidden field won't help -- this is DOM behaviour, after all.")}));test("A form containing a dirty button is not dirty",(function(){var t=n("<input type='button' name='dirtyHiddenField' value='someValue'>");t.find("input[name=dirtyHiddenField]").val("changed value");var e=t.isDirty();equal(e,!1,"A form containing a dirty, button is not dirty")}));test("A form containing a dirty select is dirty",(function(){var t=n("<select name='dirtySelect'><option>Option 1</option><option selected='selected'>Option 2</option><option>Option 3</option></select>");t.find("select").val("Option 3");var e=t.isDirty();equal(e,!0,"A form containing a dirty select is dirty")}));test("A form containing a dirty multi-select is dirty",(function(){var t=n("<select multiple='multiple' name='dirtySelect'><option selected='selected'>Option 1</option><option selected='selected'>Option 2</option><option>Option 3</option></select>");t.find("select").val("Option 3");var e=t.isDirty();equal(e,!0,"A form containing a dirty multi-select is dirty")}));test("A form containing a dirty radio button is dirty",(function(){var t=n("<input type='radio' name='radiogroup' value='initialValue2' checked='checked'><input type='radio' name='radiogroup' value='initialValue2'>");t.find("input").last().prop("checked",!0);var e=t.isDirty();equal(e,!0,"A form containing a dirty radio button is dirty")}));test("A form containing a dirty checkbox is dirty",(function(){var t=n("<input type='checkbox' name='checkgroup' value='initialValue'>");t.find("input").prop("checked",!0);var e=t.isDirty();equal(e,!0,"A form containing a dirty checkbox is dirty")}));test("A form with unchanged inputs is clean",(function(){var t=n("<input type='text' name='input1' value='someValue'><input type='text' name='input2' value='someValue'>").isDirty();equal(t,!1,"A form with clean inputs is clean")}));test("A form containing an unchanged textarea is clean",(function(){var t=n("<textarea name='textarea1'>this is the defaultValue</textarea>").isDirty();equal(t,!1,"A form with a clean textarea is clean")}));test("A form containing a changed textarea is dirty",(function(){var t=n("<textarea name='textarea1'>this is the defaultValue</textarea>");t.find("textarea").val("dirty value");var e=t.isDirty();equal(e,!0,"A form with a dirty textarea is dirty")}));test("A form containing a changed text input is dirty",(function(){var t=n("<input type='text' value='this is the defaultValue' name='input1'/>");t.find("input").val("dirty value");var e=t.isDirty();equal(e,!0,"A form with a dirty text input is dirty")}))}));