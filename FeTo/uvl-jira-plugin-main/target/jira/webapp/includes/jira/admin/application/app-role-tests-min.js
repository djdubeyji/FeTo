AJS.test.require(["jira.webresources:application-roles-init"],(function(){"use strict";var e=require("underscore"),t=require("jquery"),r=require("jira/jquery/deferred"),o=require("jira/backbone-1.3.3"),a=require("marionette"),s=require("wrm/context-path")();function i(e){e()}i((function(){var r=function(){return e.extend({},o.Events)},i=function(){return e.toArray(arguments).join(",")},n=function(e){this.options=e;this.items=[]};e.extend(n.prototype,{addItem:function(e){this.items.push(e)},assertDescriptor:function(t,r){equal(this.options.weight,0,"Correct Weight");equal(this.items.length,r.length,"There should be "+r.length+"items.");for(var o=0;o<this.items.length;o++)this.items[o].assertDescriptor(r[o]);if(t===r.length)ok(e.isUndefined(this.options.label),"No label specified");else{var a=i("application.access.configuration.groups.partial",r.length,t);equal(this.options.label,a,"Label indicating partial results.")}}});var l=function(e){this.options=e};e.extend(l.prototype,{assertDescriptor:function(e){equal(this.options.value,e,"Value should be "+e);equal(this.options.value,e,"Label should be "+e);equal(this.options.html,e,"Label should be "+e);equal(this.options.highlighted,!0,"Item should be highlighted.")}});var u=function(e){this.options=e};e.extend(u.prototype,{clear:sinon.mock()});var p=function(){this.element=t("#qunit-fixture")};e.extend(p.prototype,{select:function(){return this.element.find("select.ss-group-picker")},val:function(e){var r=this.select();0===r.find("option[value='"+e+"']").length&&t("<option>").attr("value",e).text(e).appendTo(r).prop("selected",!0);r.trigger("selected")},loadingVisible:function(){return this.element.find(".loading.icon").length>0}});var d=function(t,r){return{total:t,groups:e.map(r,(function(e){return{name:e,html:e}}))}},h=function(e,t,r){equal(e.length,1,"There is only one element.");ok(e[0]instanceof n,"The element is a GroupDescriptor");e[0].assertDescriptor(t,r)};module("Group Selector Tests",{setup:function(){this.context=AJS.test.mockableModuleContext();this.context.mock("jira/ajs/select/single-select",u);this.context.mock("jira/ajs/list/group-descriptor",n);this.context.mock("jira/ajs/list/item-descriptor",l);this.parser=new p;this.region=new a.Region({el:"#qunit-fixture"});this.format=AJS.format;AJS.format=i},teardown:function(){AJS.format=this.format}});test("Constructs single select correctly",(function(){var e=new(this.context.require("jira/admin/application/grouppicker"))({});this.region.show(e);var t=e.select.options;equal(t.itemAttrDisplayed,"label","Displaying the label.");equal(t.showDropdownButton,!0,"Showing the dropdown.");ok(t.element.index(this.parser.select())>=0,"Element is the select list.");var r=t.ajaxOptions;deepEqual(r.data("query"),{query:"query"},"Generate correct AJAX GET parameters.");equal(r.url,s+"/rest/api/2/groups/picker","Calls the right REST resource.");equal(r.query,!0,"Queries the server on each keystroke.")}));var c=function(e){var t=new(this.context.require("jira/admin/application/grouppicker"));this.region.show(t);var r=t.select.options.ajaxOptions.formatResponse;e.call(this,r,t)};test("formatResponse parses AJAX full response correctly",(function(){c.call(this,(function(e){var t=e(d(2,["jira-users","jira-developers"]));h(t,2,["jira-users","jira-developers"])}))}));test("formatResponse parses partial AJAX response correctly",(function(){c.call(this,(function(e){var t=e(d(5,["jira-users","jira-developers"]));h(t,5,["jira-users","jira-developers"])}))}));test("formatResponse excludes groups",(function(){c.call(this,(function(e,t){t.excludeGroups("jira-users");var r=e(d(2,["jira-users","jira-developers"]));h(r,1,["jira-developers"])}))}));test("formatResponse includes groups",(function(){c.call(this,(function(e,t){t.excludeGroups("jira-users");t.includeGroups("jira-users","jira-administrators");var r=e(d(2,["jira-users","jira-developers"]));h(r,2,["jira-users","jira-developers"])}))}));test("formatResponse excludes groups partial",(function(){c.call(this,(function(e,t){t.excludeGroups("jira-users");var r=e(d(5,["jira-users","jira-developers"]));h(r,4,["jira-developers"])}))}));test("Updating single select triggers selectGroup event on bus",(function(){var e=this.context.require("jira/admin/application/grouppicker"),t=new r,o=new e({bus:t});this.region.show(o);var a=this.spy();t.on("selectGroup",a);this.parser.val("jira-users");ok(a.calledWith("jira-users"),"'selectGroup' Event triggered with right group.");ok(o.select.clear.calledOnce,"Group selection cleared after event.")}));asyncTest("test loading indicator shows and hides",(function(e){var t=new(this.context.require("jira/admin/application/grouppicker"));this.region.show(t);var r=this;t.showLoading();window.setTimeout((function(){e.ok(r.parser.loadingVisible(),"Loading indicator should be visible after 100ms.");t.hideLoading();e.ok(!r.parser.loadingVisible(),"Loading indicator should be hidden.");start()}),150)}))}));i((function(){var o=a.ItemView.extend({initialize:function(){this.exclude=[];this.loading=0},excludeGroups:function(){this.exclude=e.union(this.exclude,e.toArray(arguments))},includeGroups:function(){this.exclude=e.difference(this.exclude,e.toArray(arguments))},template:function(e){return t("<input>").data("view",e.view)},ui:{input:"input"},events:{"newGroup input":"_toAdd"},_toAdd:function(){this.options.bus.trigger("selectGroup",this.ui.input.val())},serializeData:function(){return{view:this}},showLoading:function(){this.loading++;return this},hideLoading:function(){this.loading--;return this},isLoading:function(){return this.loading>0}}),s=function(){this.element=t("#qunit-fixture")};e.extend(s.prototype,{name:function(){return this.element.find("h3").text()},groups:function(){var e=this;return this.element.find("span.application-role-name-group-name").map((function(){return e._toName(t(this))})).get()},groupsDetail:function(){var e=this;return this.element.find("span.application-role-name-group-name").map((function(){return{name:e._toName(t(this)),userCount:e._toUserCount(t(this))}})).get()},getGroupDetail:function(t){return e.findWhere(this.groupsDetail(),{name:t})},getDefaults:function(){var e=this;return this.element.find(".application-role-default input:checked").map((function(){return e._toName(t(this))})).get()},isDefaultApplication:function(){return"common.words.default"===this.element.find(".default-app-lozenge").text()},groupsWithEditableDefault:function(){var e=this;return this.element.find(".application-role-default input:enabled").map((function(){return e._toName(t(this))})).get()},groupDefaultWarningPopupVisible:function(e){var r="#group-reuse-roleid-"+e.cid+"-default-warning",o=t(r);if(!o.length)throw"Could not find default warning popup";return!o.attr("hidden")},groupAddWarningPopupVisible:function(e){var r="#group-reuse-roleid-"+e.cid+"-add-warning",o=t(r);if(!o.length)throw"Could not find group warning popup";return!o.attr("hidden")},deleteable:function(){var e=this;return this.element.find("a.application-role-remove").map((function(){return e._toName(t(this))})).get()},addGroup:function(e){this.element.find(".application-role-selector-container input").val(e).trigger("newGroup");return this},removeGroup:function(e){var t=this._toRow(e).find("a.application-role-remove");if(!t.length)throw"Not allowed to delete group '"+e+"'.";t.click();return this},setDefault:function(e){var t=this._getDefaultCheckbox(e);if(t.is(":checked"))throw"Group '"+e+"' is already default.";t.click();return this},unsetDefault:function(e){var t=this._getDefaultCheckbox(e);if(!t.is(":checked"))throw"Group '"+e+"' is not currently a default.";t.change();t.click();return this},_toRow:function(e){var r=this,o=this.element.find(".application-role-name-group-name").filter((function(){return r._toName(t(this))===e}));if(o.length)return o.closest("tr");throw"Unable to find group '"+e+"'."},_toName:function(e){if(e.hasClass(".application-role-name-group-name"))return e.text();var t=e.closest("tr").find(".application-role-name-group-name");return t.length?t.text():null},_toUserCount:function(e){var t=e.closest("tr").find(".application-role-name-group-size");return t.length?parseInt(t.attr("data-value")):null},emptyMessageShowing:function(){return!!this.element.find(".application-role-empty").length},noDefaultGroupWarningShowing:function(){return this.element.find(".application-role-without-default-group").length>0},getExcludedGroups:function(){return this._getGroupSelector().exclude},isLoading:function(){return this._getGroupSelector().isLoading()},_getGroupSelector:function(){return this.element.find(".application-role-selector-container input").data("view")},_getDefaultCheckbox:function(e){var t=this._toRow(e).find(".application-role-default input");if(!t.length)throw"Unable to find default checkbox for group '"+e+"'.";return t},defined:function(){return 0===this.element.find("#application-licensed-not-installed").length}});var i=function(){};e.extend(i.prototype,{getGroupDetails:function(e){return r().resolve({name:e,users:{size:1}})}});module("Role Editor Tests",{setup:function(){this.context=AJS.test.mockableModuleContext();this.context.mock("jira/admin/application/grouppicker",o);this.context.mock("aui/inline-dialog2",{});this.context.mock("jira/admin/application/application-role-labels",{});this.parser=new s;this.region=new a.Region({el:"#qunit-fixture"})}});test("Renders correct view with no defaults",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one","two","three"]},IO:new i});this.region.show(e.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"The groups are rendered correctly.");deepEqual(this.parser.deleteable(),["one","two","three"],"Should be able to delete all groups.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Should be able to set the default of all groups.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select the current groups.");deepEqual(this.parser.getDefaults(),[],"No default rendered")}));test("Renders correct view with application marked as default",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one"],selectedByDefault:!0},IO:new i});this.region.show(e.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");ok(this.parser.isDefaultApplication(),"Rendered application is marked as default")}));test("Renders correct view with one default",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["two"]},IO:new i});this.region.show(e.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"The groups are rendered correctly.");deepEqual(this.parser.deleteable(),["one","three"],"Able to delete non default groups.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select the current groups.");deepEqual(this.parser.groupsWithEditableDefault(),["one","three"],"Should be able to set the default of non-default groups.");deepEqual(this.parser.getDefaults(),["two"],"Default correctly rendered.")}));test("Renders correct view with multiple defaults",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["two","three"]},IO:new i});this.region.show(e.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"The groups are rendered correctly.");deepEqual(this.parser.deleteable(),["one","two","three"],"Able to delete non-default groups.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select the current groups.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Should be able to edit all groups.");deepEqual(this.parser.getDefaults(),["two","three"],"Default correctly rendered.")}));test("Renders correct view with only one default",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one"],defaultGroups:["one"]},IO:new i});this.region.show(e.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one"],"The groups are rendered correctly.");deepEqual(this.parser.deleteable(),[],"Nothing is deletable.");deepEqual(this.parser.getExcludedGroups(),["one"],"Not able to select the current groups.");deepEqual(this.parser.groupsWithEditableDefault(),[],"No groups should be editable.");deepEqual(this.parser.getDefaults(),["one"],"Default correctly rendered.")}));test("Add group correctly adds group to the UI with one non-default group",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one"],"Not able to select the current groups.");deepEqual(this.parser.getDefaults(),[],"No default rendered");deepEqual(this.parser.deleteable(),[],"Should not be able to delete last group.");deepEqual(this.parser.groupsWithEditableDefault(),["one"],"The group should be editable to allow default to be set.");this.parser.addGroup("three");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","three"],"New group correctly rendered.");deepEqual(this.parser.getExcludedGroups(),["one","three"],"Not able to select the new groups.");deepEqual(this.parser.getDefaults(),[],"Still no defaults unless the user explicitly sets it.");deepEqual(this.parser.deleteable(),["one","three"],"Both groups should be deletable.");deepEqual(this.parser.groupsWithEditableDefault(),["one","three"],"Should be able to edit both groups.");ok(o.calledWith(["one","three"],[]),"Change persisted to the server.")}));test("Add group correctly adds group to the UI with multiple non-default groups",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Not able to select the current groups.");deepEqual(this.parser.getDefaults(),[],"No default rendered");deepEqual(this.parser.deleteable(),["one","two"],"Can delete groups as there are multiple.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two"],"Should be able to edit both groups.");this.parser.addGroup("three");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"New group correctly rendered.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select the new groups.");deepEqual(this.parser.getDefaults(),[],"Still no defaults unless the user explicitly sets it.");deepEqual(this.parser.deleteable(),["one","two","three"],"All groups should be deletable.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Should be able to edit all groups.");ok(o.calledWith(["one","two","three"],[]),"Change persisted to the server.")}));test("Add group correctly adds group to the UI with one default",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two"],defaultGroups:["two"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one"],"Able to delete non default groups.");deepEqual(this.parser.getDefaults(),["two"],"Default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one"],"Should be able to edit non-default.");this.parser.addGroup("three");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"New group correctly rendered.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select the new groups.");deepEqual(this.parser.deleteable(),["one","three"],"New group should be deletable.");deepEqual(this.parser.getDefaults(),["two"],"Default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one","three"],"Should be able to edit non-defaults.");ok(o.calledWith(["one","two","three"],["two"]),"Change persisted to the server.")}));test("Add group correctly adds group to the UI with multiple defaults",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two"],defaultGroups:["one","two"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one","two"],"Able to delete groups as there are multiple.");deepEqual(this.parser.getDefaults(),["one","two"],"Default rendereds.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two"],"Should be able to edit defaults as there are many.");this.parser.addGroup("three");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"New group correctly rendered.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select the new groups.");deepEqual(this.parser.deleteable(),["one","two","three"],"All groups should be deletable.");deepEqual(this.parser.getDefaults(),["one","two"],"Default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Should be able to edit all groups.");ok(o.calledWith(["one","two","three"],["one","two"]),"Change persisted to the server.")}));test("Can remove non-default group when there are other groups present",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two"],defaultGroups:["two"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one"],"Able to delete non default groups.");deepEqual(this.parser.getDefaults(),["two"],"Default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one"],"Should be able to non-default group.");this.parser.removeGroup("one");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["two"],"Group removed from UI.");deepEqual(this.parser.getExcludedGroups(),["two"],"Now able to select deleted groups.");deepEqual(this.parser.deleteable(),[],"No groups deletable.");deepEqual(this.parser.getDefaults(),["two"],"Default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),[],"Should not be able to edit any groups.");ok(o.calledWith(["two"],["two"]),"Change persisted to the server.")}));test("Remove group correctly removes group without default",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one","two","three"],"Able to delete all groups.");deepEqual(this.parser.getDefaults(),[],"No default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Should be able to edit all groups.");this.parser.removeGroup("one");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["two","three"],"Group removed from UI.");deepEqual(this.parser.getExcludedGroups(),["two","three"],"Not able to select remaining groups.");deepEqual(this.parser.deleteable(),["two","three"],"Remaining groups deletable.");deepEqual(this.parser.getDefaults(),[],"No default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["two","three"],"Should be able to edit all groups.");ok(o.calledWith(["two","three"],[]),"Change persisted to the server.");this.parser.removeGroup("two");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["three"],"Group removed from UI.");deepEqual(this.parser.getExcludedGroups(),["three"],"Not able to select remaining groups.");deepEqual(this.parser.deleteable(),[],"Last group cannot be removed");deepEqual(this.parser.getDefaults(),[],"No default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["three"],"Should be able to edit all groups.");ok(o.calledWith(["three"],[]),"Change persisted to the server.")}));test("Remove default group provided there are other defaults present",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["one","two","three"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one","two","three"],"Able to delete all groups.");deepEqual(this.parser.getDefaults(),["one","two","three"],"All of them are default.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Should be able to edit all groups.");this.parser.removeGroup("one");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["two","three"],"Group removed from UI.");deepEqual(this.parser.getExcludedGroups(),["two","three"],"Not able to select remaining groups.");deepEqual(this.parser.deleteable(),["two","three"],"Remaining groups deletable.");deepEqual(this.parser.getDefaults(),["two","three"],"All of them are default.");deepEqual(this.parser.groupsWithEditableDefault(),["two","three"],"Should be able to edit all groups.");ok(o.calledWith(["two","three"],["two","three"]),"Change persisted to the server.")}));test("Can't remove last default group",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["one","two","three"]},setRole:o,IO:new i});this.region.show(a.view);this.parser.removeGroup("one");this.parser.removeGroup("two");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["three"],"Group removed from UI.");deepEqual(this.parser.getExcludedGroups(),["three"],"Not able to select remaining groups.");deepEqual(this.parser.deleteable(),[],"Last group cannot be removed");deepEqual(this.parser.getDefaults(),["three"],"All of them are default.");deepEqual(this.parser.groupsWithEditableDefault(),[],"Cannot unset last default.");ok(o.calledWith(["three"],["three"]),"Change persisted to the server.")}));test("Can't remove last non-default group",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"]},setRole:o,IO:new i});this.region.show(a.view);this.parser.removeGroup("one");this.parser.removeGroup("two");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["three"],"Group removed from UI.");deepEqual(this.parser.getExcludedGroups(),["three"],"Not able to select remaining groups.");deepEqual(this.parser.deleteable(),[],"Last group cannot be removed");deepEqual(this.parser.getDefaults(),[],"No default groups rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["three"],"Any group can be made default.");ok(o.calledWith(["three"],[]),"Change persisted to the server.")}));test("Set default group correctly sets default when no current default",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one","two","three"],"Able to delete all groups.");deepEqual(this.parser.getDefaults(),[],"No default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"Any group can be made default.");this.parser.setDefault("one");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two","three"],"Groups remain same after operation.");deepEqual(this.parser.getExcludedGroups(),["one","two","three"],"Still not able to select groups in role.");deepEqual(this.parser.deleteable(),["two","three"],"Only non-default groups deletable.");deepEqual(this.parser.getDefaults(),["one"],"Default has been rendered");deepEqual(this.parser.groupsWithEditableDefault(),["two","three"],"The only default cannot be unset.");ok(o.calledWith(["one","two","three"],["one"]),"Change persisted to the server.")}));test("Defined applications will not render warning",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defined:!0},IO:new i});this.region.show(e.view);ok(this.parser.defined(),"Warning should not rendered because application is defined.")}));test("Undefined applications will render warning",(function(){var e=new(this.context.require("jira/admin/application/approleeditor"))({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defined:!1},IO:new i});this.region.show(e.view);ok(!this.parser.defined(),"Warning should render because application is undefined.")}));test("Applications without default group will render warning.",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"]},setRole:this.stub().returns(t),IO:new i});this.region.show(o.view);ok(this.parser.noDefaultGroupWarningShowing(),"Warning should show because no default group is set");this.parser.setDefault("one");ok(!this.parser.noDefaultGroupWarningShowing(),"Warning shouldn't show because one group is set as a default");this.parser.setDefault("two");ok(!this.parser.noDefaultGroupWarningShowing(),"Warning shouldn't show because two groups are set as a default")}));test("Set default group correctly sets default when there is a current default",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two"],defaultGroups:["two"]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Not able to select initial groups.");deepEqual(this.parser.deleteable(),["one"],"Able to delete non-default groups.");deepEqual(this.parser.getDefaults(),["two"],"Initial default rendered.");deepEqual(this.parser.groupsWithEditableDefault(),["one"],"The only default cannot be unset.");this.parser.setDefault("one");deepEqual(this.parser.groupsWithEditableDefault(),["one","two"],"All groups should be editable.");this.parser.unsetDefault("two");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"Groups remain same after operation.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Still not able to select groups in role.");deepEqual(this.parser.deleteable(),["two"],"Only non-default groups deletable.");deepEqual(this.parser.getDefaults(),["one"],"Default has been rendered");deepEqual(this.parser.groupsWithEditableDefault(),["two"],"The only default cannot be unset.");ok(o.calledWith(["one","two"],["one"]),"Change persisted to the server.")}));test("Able to set multiple defaults",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two"]},setRole:o,IO:new i});this.region.show(a.view);this.parser.setDefault("one");this.parser.setDefault("two");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["one","two"],"Groups remain same after operation.");deepEqual(this.parser.getExcludedGroups(),["one","two"],"Still not able to select groups in role.");deepEqual(this.parser.deleteable(),["one","two"],"All groups are deletable.");deepEqual(this.parser.getDefaults(),["one","two"],"Default has been rendered");deepEqual(this.parser.groupsWithEditableDefault(),["one","two"],"All defaults can be unset because there are multiple.");ok(o.calledWith(["one","two"],["one","two"]),"Change persisted to the server.")}));test("Can toggle the default on all but the last default",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["one","two","three"]},setRole:o,IO:new i});this.region.show(a.view);deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"All defaults can be unset because there are multiple.");this.parser.unsetDefault("one");deepEqual(this.parser.groupsWithEditableDefault(),["one","two","three"],"All groups can be edited.");this.parser.unsetDefault("two");deepEqual(this.parser.groupsWithEditableDefault(),["one","two"],"Last default cannot be edited.");ok(o.calledWith(["one","two","three"],["three"]),"Change persisted to the server.")}));test("Can toggle default when single non-default group available",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:["one"]},setRole:o,IO:new i});this.region.show(a.view);deepEqual(this.parser.groups(),["one"],"Groups remain same after operation.");deepEqual(this.parser.getExcludedGroups(),["one"],"Still not able to select groups in role.");deepEqual(this.parser.deleteable(),[],"Last group cannot be removed.");deepEqual(this.parser.getDefaults(),[],"No defaults rendered");deepEqual(this.parser.groupsWithEditableDefault(),["one"],"Non-default group can be made default");this.parser.setDefault("one");deepEqual(this.parser.groups(),["one"],"Groups remain same after operation.");deepEqual(this.parser.getExcludedGroups(),["one"],"Still not able to select groups in role.");deepEqual(this.parser.deleteable(),[],"Last group cannot be removed.");deepEqual(this.parser.getDefaults(),["one"],"No defaults rendered");deepEqual(this.parser.groupsWithEditableDefault(),[],"Cannot unset the only default.");ok(o.calledWith(["one"],["one"]),"Change persisted to the server.")}));test("No groups renders empty view and allows creation of new rows.",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new e({data:{key:"roleid",name:"RoleId",groups:[]},setRole:o,IO:new i});this.region.show(a.view);equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),[],"The groups are rendered correctly.");deepEqual(this.parser.getExcludedGroups(),[],"Able to select all groups.");ok(this.parser.emptyMessageShowing(),"Empty message should be showing.");this.parser.addGroup("first");equal(this.parser.name(),"RoleId","The Role name is rendered correctly.");deepEqual(this.parser.groups(),["first"],"First group added to UI.");deepEqual(this.parser.getExcludedGroups(),["first"],"Not able to select initial group.");deepEqual(this.parser.deleteable(),[],"First group is default and cannot be deleted.");deepEqual(this.parser.getDefaults(),[],"First is not default until user explicitly decides.");ok(o.calledWith(["first"],[]),"Change persisted to the server.")}));asyncTest("HIROL-983 Selecting group as default which is used in different apps should display warning popup",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["one"],defaultGroupsExistingInAnyOtherRoles:{"other-role":["two"]},appsReusingGroup:["Another app"]},setRole:function(){return t.promise()},IO:new i});this.region.show(o.view);this.parser.setDefault("two");t.resolve({remainingSeats:20,numberOfSeats:30,userCount:10,hasUnlimitedSeats:!1});setTimeout(function(){ok(!this.parser.groupDefaultWarningPopupVisible(o._groups.models[0]),"Default warning popup for group one is not visible.");ok(this.parser.groupDefaultWarningPopupVisible(o._groups.models[1]),"Default warning popup for group two should be shown.");ok(!this.parser.groupDefaultWarningPopupVisible(o._groups.models[2]),"Default warning popup for group three is not visible.");start()}.bind(this),1)}));test("HIROL-983 Selecting group as default which is not used in different apps should not display warning popup",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:["one","two","three"],defaultGroups:["one"],defaultGroupsExistingInAnyOtherRoles:{"other-role":["one"]}},setRole:function(){return t.promise()},IO:new i});this.region.show(o.view);this.parser.setDefault("three");t.resolve({remainingSeats:20,numberOfSeats:30,userCount:10,hasUnlimitedSeats:!1});ok(!this.parser.groupDefaultWarningPopupVisible(o._groups.models[0]),"Default warning popup for group one should not be shown.");ok(!this.parser.groupDefaultWarningPopupVisible(o._groups.models[1]),"Default warning popup for group two should not be shown.");ok(!this.parser.groupDefaultWarningPopupVisible(o._groups.models[2]),"Default warning popup for group three should not be shown")}));asyncTest("HIROL-983 Adding group which is default in different apps should display warning popup",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:["one"],defaultGroups:["one"],defaultGroupsExistingInAnyOtherRoles:{"other-role":["two"]},appsAndDefaultRoles:{"other-role":["two"]}},setRole:function(){return t.promise()},IO:new i});this.region.show(o.view);this.parser.addGroup("two");t.resolve({remainingSeats:20,numberOfSeats:30,userCount:10,hasUnlimitedSeats:!1});setTimeout(function(){ok(!this.parser.groupAddWarningPopupVisible(o._groups.models[0]),"Group warning popup for group one should not be visible.");ok(this.parser.groupAddWarningPopupVisible(o._groups.models[1]),"Group warning popup for group two should be visible.");start()}.bind(this),1)}));test("HIROL-983 Adding group which is not default in other apps should not display warning popup",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:["one"],defaultGroups:["one"],defaultGroupsExistingInAnyOtherRoles:{"other-role":["two"]}},setRole:function(){return t.promise()},IO:new i});this.region.show(o.view);this.parser.addGroup("two");t.resolve({remainingSeats:20,numberOfSeats:30,userCount:10,hasUnlimitedSeats:!1});ok(!this.parser.groupAddWarningPopupVisible(o._groups.models[0]),"Group warning popup for group one should not be visible.");ok(!this.parser.groupAddWarningPopupVisible(o._groups.models[1]),"Group warning popup for group two should not be visible.")}));test("Loading indicator shows when loading.",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:[]},setRole:this.stub().returns(t),IO:new i});this.region.show(o.view);this.parser.addGroup("first");ok(this.parser.isLoading(),"Loading while PUT out.");t.resolve([]);ok(!this.parser.isLoading(),"Not loading after PUT finished.")}));test("Group user counts are displayed on initial load",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:["a"]},setRole:this.stub().returns(t),IO:new i});this.region.show(o.view);var a=this.parser.getGroupDetail("a");equal(a.userCount,1,"The group's user count is rendered correctly")}));test("Group user counts are gracefully not rendered if group detail is not retrieved",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=this.stub().returns(t),a=new i;sinon.stub(a,"getGroupDetails").withArgs("a").returns(r().reject());var s=new e({data:{key:"roleid",name:"RoleId",groups:["a"]},setRole:o,IO:a});this.region.show(s.view);var n=this.parser.getGroupDetail("a");equal(n.userCount,null,"The group's user count is hidden");equal(n.name,"a","The group's name is still shown")}));test("Group user counts are displayed for added group",(function(){var e=this.context.require("jira/admin/application/approleeditor"),t=r(),o=new e({data:{key:"roleid",name:"RoleId",groups:[]},setRole:this.stub().returns(t),IO:new i});this.region.show(o.view);this.parser.addGroup("three");var a=this.parser.getGroupDetail("three");equal(a.userCount,1,"The added group's user count is rendered correctly")}))}));i((function(){var i=function e(t){this.shown=!1;this.options=t;e.last=this};e.extend(i.prototype,{show:function(){this.shown=!0},isShown:function(){return this.shown},getOptions:function(){return this.options},getXhr:function(){return this.options.xhr}});i.openErrorDialogForXHR=function(e){return new i({xhr:e})};var n=function(){return e.toArray(arguments).join(",")},l=a.ItemView.extend({template:function(e){return t("<div>").text(JSON.stringify(e.view.model.toJSON())).addClass("role-editor-test").data("view",e.view)},serializeData:function(){return{view:this}},setGroups:function(e,t){return this.options.setRole(e,t)}}),u=function(e){this.view=new l({model:new o.Model(e.data),setRole:e.setRole})},p=function(){this.element=t("#qunit-fixture")};e.extend(p.prototype,{isNoRoleMessageVisible:function(){return!!this.element.find("#application-role-none").length},loadingVisible:function(){return!!this.element.find("#application-role-initial-load").length},roles:function(){return this.element.find("div.role-editor-test").map((function(){return JSON.parse(t(this).text())})).get()},views:function(){return this.element.find("div.role-editor-test").map((function(){return t(this).data("view")})).get()}});var d=function(e,t,r,o,a){deepEqual(function(e){e.data=JSON.parse(e.data);return e}(this.ajax.lastCall.options),function(e,t,r,o,a){return{url:s+"/rest/api/2/applicationrole/"+e,dataType:"json",headers:{"If-Match":a.toString()},type:"PUT",contentType:"application/json",data:{groups:t,defaultGroups:r,selectedByDefault:o}}}(e,t,r,o,a),"Put for role called with correct arguments.")},h=function(){ok(i.last,"Error displayed.");deepEqual(i.last.options,{message:"application.access.configuration.out.of.date",mode:"warning"},"Error dialog created with correct options.");ok(i.last.isShown(),"Error dialog should be shown.")},c=function(e){ok(i.last,"Error displayed.");deepEqual(i.last.getXhr(),e,"Error dialog should be passed rejected data.")},g=function(){ok(!i.last,"No error should have been displayed.")},f=function(e,t){equal(e.state(),"resolved","Deferred resolved?");var r=this.spy();e.done(r);ok(r.called,"Done called.");deepEqual(r.firstCall.args,t,"Callback triggered with correct arguments.")},w=function(e,t){equal(e.state(),"rejected","Deferred rejected?");var r=this.spy();e.fail(r);ok(r.called,"Fail called.");deepEqual(r.firstCall.args,t,"Callback triggered with correct arguments.")},m=function(e){w.call(this,e,[null,"abort"])},b=function(e){equal(e.state(),"pending","Deferred pending?")},v={getResponseHeader:function(){return"0"}},q=function(e){var t=e||[{key:"a",name:"a",groups:["a","z"],defaultGroups:[]},{key:"b",name:"b",groups:["c","a"],defaultGroups:["a"]}],r=new(this.context.require("jira/admin/application/approleseditor"))({el:this.element});this.ajax.calls[0].resolve(t,[],v);this.ajax.reset();return r};module("Roles Editor Tests",{setup:function(){i.last=null;this.context=AJS.test.mockableModuleContext();this.ajax=function(){var e=function e(t,o){var a=r();a.options=t;a.dialog=o;e.calls.push(a);e.callCount++;e.lastCall=a;return a.promise()};e.reset=function(){e.calls=[];e.callCount=0;delete e.lastCall;return this};return e.reset()}();this.context.mock("jira/ajs/ajax/smart-ajax/web-sudo",{makeWebSudoRequest:this.ajax});this.context.mock("jira/dialog/error-dialog",i);this.context.mock("jira/admin/application/approleeditor",u);this.context.mock("jira/admin/application/application-role-labels",{});this.parser=new p;this.element=t("#qunit-fixture");this.ounload=window.onbeforeunload;window.onbeforeunload=null;this.oformat=AJS.format;AJS.format=n;this.assertFail=w;this.assertAbort=m;this.assertDone=f;this.assertGeneralErrorDisplayed=h;this.assertXhrErrorDisplayed=c;this.assertNoErrorDisplayed=g;this.createEditor=q;this.assertPut=d;this.assertPending=b},teardown:function(){AJS.format=this.oformat;window.onbeforeunload=this.ounload}});test("Empty message shown when no roles installed",(function(){new(this.context.require("jira/admin/application/approleseditor"))({el:this.element});this.ajax.calls[0].resolve([],[],v);ok(this.parser.isNoRoleMessageVisible(),"No role message is visible.")}));test("Nothing happens when element no passed.",(function(){new(this.context.require("jira/admin/application/approleseditor"))({ajax:this.ajax});ok(!this.ajax.called,"Don't trigger a render if nothing is going to display.")}));test("Nothing happens when empty jQuery set passed.",(function(){new(this.context.require("jira/admin/application/approleseditor"))({$el:t()});ok(!this.ajax.called,"Don't trigger a render if nothing is going to display.")}));test("Loading indicator is only shown while loading.",(function(){new(this.context.require("jira/admin/application/approleseditor"))({el:this.element});ok(this.parser.loadingVisible(),"Loading indicator is visible during load.");this.ajax.calls[0].resolve([],[],v);ok(!this.parser.loadingVisible(),"Loading indicator is hidden after load.")}));test("RolesEditor sends application role request with correct AJAX options",(function(){new(this.context.require("jira/admin/application/approleseditor"))({el:this.element});var e={url:s+"/rest/api/2/applicationrole",dataType:"json"};deepEqual(this.ajax.calls[0].options,e,"Get method called with correct AJAX options.")}));test("HIROL-776 Default groups reused in different roles are evaluated properly",(function(){this.createEditor([{key:"a-key",name:"a-name",groups:["a","z","b"],defaultGroups:["z","b"]},{key:"b-key",name:"b-name",groups:["b","z"],defaultGroups:[]},{key:"c-key",name:"c-name",groups:["c","z"],defaultGroups:[]}]);deepEqual(e.pluck(this.parser.roles(),"defaultGroupsExistingInAnyOtherRoles"),[{"b-name":["z","b"],"c-name":["z"]},{},{}],"Roles rendered on the page in correct order with correct parameters.")}));test("Error dialog triggered when error occurs while trying to load roles.",(function(){var e={msg:"This is an error"};new(this.context.require("jira/admin/application/approleseditor"))({el:this.element});this.ajax.calls[0].reject(e);ok(this.parser.loadingVisible(),"Loading should remain visible after the error.");this.assertXhrErrorDisplayed(e)}));test("Updating roles triggers AJAX call to server",(function(){this.createEditor();this.parser.views()[0].setGroups(["k","i","l"],["l"]);this.assertPut("a",["k","i","l"],["l"],!1,0);this.ajax.lastCall.resolve({groups:[]},[],v);this.assertNoErrorDisplayed()}));test("Error while updating roles triggers error dialog.",(function(){this.createEditor();var e="Error";this.parser.views()[0].setGroups(["k","i","l"],["l"]);this.ajax.lastCall.reject(e,[],v);this.assertXhrErrorDisplayed(e)}));test("400 Error while updating roles triggers error dialog.",(function(){this.createEditor();this.parser.views()[0].setGroups(["k","i","l"],["l"]);this.ajax.lastCall.reject({status:400},"failed",v);this.assertGeneralErrorDisplayed()}));test("Updating queues put requests on slow AJAX response.",(function(){this.createEditor();var e=this.parser.views()[1],t=this.ajax;e.setGroups(["a"],[]);e.setGroups(["b"],[]);e.setGroups(["c"],[]);equal(t.callCount,1,"AJAX request batched.");this.assertPut("b",["a"],[],!1,0);t.lastCall.resolve({groups:[]},[],v);equal(t.callCount,3,"AJAX request un-batched.");this.assertPut("b",["c"],[],!1,0);this.assertNoErrorDisplayed()}));test("Updating queues put requests on slow AJAX response multiple roles.",(function(){this.createEditor();var e=this.parser.views(),t=e[0],r=e[1],o=this.ajax;t.setGroups(["a"],[]);r.setGroups(["b"],[]);t.setGroups(["c"],[]);equal(o.callCount,1,"AJAX request batched.");this.assertPut("a",["a"],[],!1,0);o.lastCall.resolve({groups:[]});equal(o.callCount,3,"AJAX request batched.");this.assertPut("b",["b"],[],!1,0);o.lastCall.resolve({groups:[]},[],v);equal(o.callCount,5,"AJAX request batched.");this.assertPut("a",["c"],[],!1,0);this.assertNoErrorDisplayed()}));test("First error aborts all current and subsequent requests.",(function(){this.createEditor();var e=this.parser.views(),t=e[0],r=e[1],o=this.ajax,a=t.setGroups(["a"],[]),s=r.setGroups(["b"],[]),i=t.setGroups(["c"],[]);equal(o.callCount,1,"AJAX request batched.");this.assertPut("a",["a"],[],!1,0);o.lastCall.reject("Error");this.assertFail(a,["Error"]);this.assertAbort(s);this.assertAbort(i);var n=t.setGroups(["c"],[],!1);this.assertAbort(n)}));test("Queued requests are reject with 'abort' code when not run.",(function(){this.createEditor();var e=this.parser.views()[1],t=e.setGroups(["a"],[]);this.assertPending(t);var r=e.setGroups(["b"],[]);this.assertPending(t);this.assertPending(r);var o=e.setGroups(["c"],[]);this.assertPending(t);this.assertPending(o);this.assertAbort(r);this.assertNoErrorDisplayed();this.ajax.calls[0].resolve([],[],v);this.ajax.calls[1].resolve([],[],v);this.assertDone(t,[[]]);this.assertPending(o);this.assertNoErrorDisplayed();this.ajax.calls[2].resolve([],[],v);this.ajax.calls[3].resolve([],[],v);this.assertDone(o,[[]]);this.assertNoErrorDisplayed()}));test("Trying to leave page while updating gives warning to user until AJAX finishes with success",(function(){this.createEditor();var e=this.parser.views()[1],t=this.ajax;e.setGroups(["a"],[]);equal(window.onbeforeunload(),"application.access.configuration.active.ajax","Warn user about leaving page while AJAX still active.");t.lastCall.resolve({groups:[]});ok(!window.onbeforeunload(),"Able to leave page when AJAX finished.")}));test("Trying to leave page while updating gives warning to user until AJAX finishes with error",(function(){this.createEditor();var e=this.parser.views()[1],t=this.ajax;e.setGroups(["a"],null);equal(window.onbeforeunload(),"application.access.configuration.active.ajax","Warn user about leaving page while AJAX still active.");t.lastCall.reject("Error",[],v);ok(!window.onbeforeunload(),"Able to leave page when AJAX finished.")}));test("Trying to leave page while updating gives warning to user when request queued until error.",(function(){this.createEditor();var e=this.parser.views()[1],t=this.ajax;e.setGroups(["a"],[]);equal(window.onbeforeunload(),"application.access.configuration.active.ajax","Warn user about leaving page while AJAX still active.");e.setGroups(["a"],[]);t.lastCall.resolve({groups:[]});equal(window.onbeforeunload(),"application.access.configuration.active.ajax","Warn user about leaving page while AJAX queued.");t.lastCall.reject("error",[],v);ok(!window.onbeforeunload(),"Able to leave page when AJAX finished.")}));test("Trying to leave page while updating is okay if websudo was triggered.",(function(){this.createEditor();var e=this.parser.views()[1],t=this.ajax,r=e.setGroups(["a"],[]);equal(window.onbeforeunload(),"application.access.configuration.active.ajax","Warn user about leaving page while AJAX still active.");t.lastCall.dialog.beforeShow();ok(!window.onbeforeunload(),"Able to leave page when AJAX finished.");this.assertAbort(r)}));test("Still calls old onbeforeunload function.",(function(){var e="Error",t=window.onbeforeunload=this.stub().returns(e);this.createEditor();var r=this.parser.views()[1],o=this.ajax;r.setGroups(["a"],[]);equal(window.onbeforeunload(),e,"Calls old onbeforeunload first.");t.returns(void 0);equal(window.onbeforeunload(),"application.access.configuration.active.ajax","Warn user about leaving page while AJAX still active.");o.lastCall.resolve({groups:[]});ok(!window.onbeforeunload(),"Able to leave page when AJAX finished.")}))}))}));