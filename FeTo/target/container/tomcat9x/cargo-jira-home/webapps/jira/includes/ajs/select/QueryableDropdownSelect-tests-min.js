AJS.test.require(["jira.webresources:select-pickers"],(function(){"use strict";var e=require("jquery"),t=require("jira/jquery/deferred"),a=require("jira/ajs/select/queryable-dropdown-select");module("QueryableDropdownSelect");function r(e,t){t.forEach((function(t){var a=t.attr,r=t.value;equal(e.$field.attr(a),r,"expected "+a+"="+r)}))}test("Should get results before rendering dropdown (such that positioning won't be borked)",(function(){var r=this,o=new a({element:e("<ul></ul>")});r.stub(o,"getQueryVal",(function(){return"one"}));r.stub(o,"requestSuggestions",(function(){return(new t).resolve(["one","two"]).promise()}));var n=r.spy(o.listController,"generateListFromJSON"),i=r.spy(o.dropdownController,"show"),l=r.spy(o.dropdownController,"setPosition");o.onEdit();ok(n.calledBefore(i),"should have results before we render a dropdown with them in it (to prevent things like TF-39)");ok(n.calledBefore(l),"should have results before we calc and position a dropdown with them in it (to prevent things like TF-39)")}));test("ariaLabel",(function(){var t=new a({element:e("<ul></ul>"),ariaLabel:"Test Label"});equal(t.$field.attr("aria-label"),"Test Label","aria-label attribute should be set from options")}));test("the dropdown trigger should have correct attributes",(function(){var t=new a({element:e("<ul></ul>"),ariaLabel:"Test Label"});equal(t.$dropDownIcon.attr("tabindex"),"-1","Dropdown should have tabindex set to -1")}));test("verify combobox attributes (compat with Aria 1.0 and 1.2)",(function(){r(new a({element:e("<ul></ul>")}),[{attr:"role",value:"combobox"},{attr:"autocomplete",value:"off"},{attr:"aria-autocomplete",value:"list"},{attr:"aria-expanded",value:"false"},{attr:"aria-haspopup",value:void 0}])}));test("verify combobox attributes when expanded (compat with Aria 1.0 and 1.2)",(function(t){var o=t.async(),n=new a({element:e("<ul></ul>"),id:"uniqueId"}),i="uniqueId-suggestions";n.showSuggestions();n.listController.focus();var l=[{attr:"aria-controls",value:i},{attr:"aria-owns",value:i},{attr:"aria-expanded",value:"true"},{attr:"aria-activedescendant",value:"null"}];setTimeout((function(){r(n,l);o()}),100)}));test("verify combobox attributes when collapsed (compat with Aria 1.0 and 1.2)",(function(){var t=new a({element:e("<ul></ul>")});t.showSuggestions();t.hideSuggestions();r(t,[{attr:"aria-controls",value:void 0},{attr:"aria-owns",value:void 0},{attr:"aria-expanded",value:"false"},{attr:"aria-activedescendant",value:void 0}])}))}));