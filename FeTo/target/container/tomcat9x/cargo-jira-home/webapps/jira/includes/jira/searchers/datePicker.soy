{namespace JIRA.Templates.DateSearcher}

/**
*/
{template .dateMeasurement}
    <label>
        <span class="assistive">{getText('popups.daterange.time.measurement')}</span>
        <select class="js-measurement select medium-field">
            <option value="m">{getText('core.dateutils.minutes')}</option>
            <option value="h">{getText('core.dateutils.hours')}</option>
            <option value="d">{getText('core.dateutils.days')}</option>
            <option value="w">{getText('core.dateutils.weeks')}</option>
        </select>
    </label>
{/template}

/**
* @param inputField
* @param dateMeasurementField
*/
{template .renderWithinTheLast}
    {getText('popups.daterange.withinthelast', $inputField, $dateMeasurementField)|noAutoescape}
{/template}

/**
*/
{template .withinTheLast}
    <label for="withinTheLastRadio" class="assistive">{getText('popups.daterange.withinthelast', getText('popups.daterange.timespan'), getText('popups.daterange.time.measurement'))}</label>
    <input type="radio" class="js-dp-type-toggle" id="withinTheLastRadio"/>
    {call .renderWithinTheLast}
        {param inputField}
            <label for="withinTheLastValue" class="assistive">{getText('popups.daterange.timespan')}</label>
            <input id="withinTheLastValue" class="js-val text" type="text" maxlength="15" data-field-name="previous" />
        {/param}
        {param dateMeasurementField}
            {call .dateMeasurement /}
        {/param}
    {/call}
{/template}

/**
*/
{template .nowOverdue}
    <label class="field-group-label"><input type="radio" class="js-dp-type-toggle" />{getText('popups.duedate.nowoverdue')}</label>
{/template}

/**
* @param inputField
* @param dateMeasurementField
*/
{template .renderMoreThan}
    {getText('popups.daterange.morethanago', $inputField, $dateMeasurementField)|noAutoescape}
{/template}

/**
*/
{template .moreThan}
    <label for="moreThanRadio" class="assistive">{getText('popups.daterange.morethanago', getText('popups.daterange.timespan'), getText('popups.daterange.time.measurement'))}</label>
    <input type="radio" tabIndex="-1" class="js-dp-type-toggle" id="moreThanRadio"/>
    {call .renderMoreThan}
        {param inputField}
            <label for="moreThanValue" class="assistive">{getText('popups.daterange.timespan')}</label>
            <input id="moreThanValue" class="js-val text" type="text" maxlength="15" data-field-name="next" />
        {/param}
        {param dateMeasurementField}
            {call .dateMeasurement /}
        {/param}
    {/call}
{/template}


/**
* @param inputField
* @param dateMeasurementField
*/
{template .renderDueMoreThan}
    {getText('popups.daterange.morethan.field', $inputField, $dateMeasurementField)|noAutoescape}
{/template}

/**
*/
{template .dueMoreThan}
    <label for="dueMoreThanRadio" class="assistive">{getText('popups.daterange.morethan.field', getText('popups.daterange.timespan'), getText('popups.daterange.time.measurement'))}</label>
    <input type="radio" tabIndex="-1" class="js-dp-type-toggle" id="dueMoreThanRadio"/>
    {call .renderDueMoreThan}
        {param inputField}
            <label for="dueMoreThanValue" class="assistive">{getText('popups.daterange.timespan')}</label>
            <input id="dueMoreThanValue" class="js-val text" type="text" maxlength="15" />
        {/param}
        {param dateMeasurementField}
            {call .dateMeasurement /}
        {/param}
    {/call}
{/template}

/**
* @param inputField
* @param dateMeasurementField
* @param clauseField
*/
{template .renderDueInNext}
    {getText('popups.daterange.dueinnext.field', $inputField, $dateMeasurementField, $clauseField)|noAutoescape}
{/template}

/**
*/
{template .dueInNext}
    <label for="dueInNextRadio" class="assistive">{getText('popups.daterange.dueinnext.field', getText('popups.daterange.timespan'), getText('popups.daterange.overdue'))}</label>
    <input type="radio" tabIndex="-1" class="js-dp-type-toggle" id="dueInNextRadio"/>
    {call .renderDueInNext}
        {param inputField}
            <label for="dueInNextValue" class="assistive">{getText('popups.daterange.timespan')}</label>
            <input id="dueInNextValue" class="js-val text" maxlength="15" type="text" />
        {/param}
        {param dateMeasurementField}
            {call .dateMeasurement /}
        {/param}
        {param clauseField}
        <label>
            <span class="assistive">{getText('popups.daterange.overdue')}</span>
            <select class="js-clause select">
                <option value="orIs">{getText('popups.duedate.or')}</option>
                <option value="andNot">{getText('popups.duedate.andnot')}</option>
            </select>
        </label>
        {/param}
    {/call}
{/template}

/**
* @param startField
* @param endField
*/
{template .renderDateBetween}
    {getText('popups.daterange.datebetween', $startField, $endField)|noAutoescape}
{/template}

/**
*/
{template .dateBetween}
    <label for="dateBetweenRadio" class="assistive">{getText('popups.daterange.datebetween', getText('date.picker.select.date.start'), getText('date.picker.select.date.end'))}</label>
    <input type="radio" tabIndex="-1" class="js-dp-type-toggle" id="dateBetweenRadio"/>
    {call .renderDateBetween}
        {param startField}
            <label for="dateBetweenStart" class="assistive">{getText('popups.daterange.date.start')}</label>
            <input id="dateBetweenStart" class="js-start-date text" maxlength="15" placeholder="11-Jan-2012" type="text" data-field-name="after" />
            <button class="js-start-date-trigger m-datePicker-btn aui-icon aui-icon-small aui-iconfont-calendar">{getText('date.picker.select.date.start')}</button>
        {/param}
        {param endField}
            <label for="dateBetweenEnd" class="assistive">{getText('popups.daterange.date.end')}</label>
            <input id="dateBetweenEnd" class="js-end-date text" maxlength="12" placeholder="30-Jan-2012" type="text" data-field-name="before" />
            <button class="js-end-date-trigger m-datePicker-btn aui-icon aui-icon-small aui-iconfont-calendar">{getText('date.picker.select.date.end')}</button>
        {/param}
    {/call}
{/template}

/**
* @param startInput
* @param endInput
*/
{template .renderInRange}
    {getText('popups.daterange.inrange.field', $startInput, $endInput)|noAutoescape}
{/template}

/**
*/
{template .inRange}
    <label for="inRangeRadio" class="assistive">{getText('popups.daterange.inrange.field', getText('date.picker.select.date.start'), getText('date.picker.select.date.end'))}</label>
    <input type="radio" tabIndex="-1" maxlength="15" class="js-dp-type-toggle" id="inRangeRadio"/>
    {call .renderInRange}
        {param startInput}
            <label for="inRangeStartDate" class="assistive">{getText('popups.daterange.date.start')}</label>
            <input id="inRangeStartDate" class="js-start-range text" placeholder="-3w 4d 12h" type="text" data-field-name="previous" />
        {/param}
        {param endInput}
            <label for="inRangeEndDate" class="assistive">{getText('popups.daterange.date.end')}</label>
            <input id="inRangeEndDate" class="js-end-range text" maxlength="15" placeholder="3w 4d 12h" type="text" data-field-name="next" />
        {/param}
    {/call}
{/template}