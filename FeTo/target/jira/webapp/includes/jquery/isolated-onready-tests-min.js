AJS.test.require(["jira.webresources:jquery"],(function(){"use strict";var s=require("jquery"),e=require("jira/util/logger");module("jira/jquery/isolated-onready",{setup:function(){this.sandbox=sinon.sandbox.create();this.loggerErrorStub=this.sandbox.stub(e,"error");this.$readyStub=this.sandbox.spy(s.fn,"ready")},teardown:function(){this.sandbox.restore()},assertOnReadyCallback:function(e){sinon.assert.calledOnce(e);sinon.assert.calledOn(e,document);sinon.assert.calledWithExactly(e,s)}});test("Isolates jQuery onReady handlers (catches JS error)",(function(){var e=this.sandbox.stub().throws("TypeError"),r=this.sandbox.spy(),t=this.sandbox.spy();s(e);s(r);s(t);this.assertOnReadyCallback(e);this.assertOnReadyCallback(r);this.assertOnReadyCallback(t);sinon.assert.calledOnce(this.loggerErrorStub);sinon.assert.calledWithExactly(this.loggerErrorStub,"An error occurred in one of the jQuery onReady callbacks",sinon.match.defined)}));test("The overwrite preserves the return value and the context of the original $ready fn",(function(){var e=this.sandbox.stub().throws("TypeError"),r=this.sandbox.spy();s(e);s(r);equal(this.$readyStub.callCount,2);ok(this.$readyStub.returnValues[0][0]===document);ok(this.$readyStub.returnValues[1][0]===document)}));test("Exotic and deprecated ways of attaching onReady handlers should be also isolated",(function(){var e=this.sandbox.stub().throws("TypeError 1"),r=this.sandbox.stub().throws("TypeError 2"),t=this.sandbox.stub().throws("TypeError 3"),a=this.sandbox.stub().throws("TypeError 4");s(document).ready(e);s("document").ready(r);s("img").ready(t);s().ready(a);this.assertOnReadyCallback(e);this.assertOnReadyCallback(r);this.assertOnReadyCallback(t);this.assertOnReadyCallback(a);sinon.assert.callCount(this.loggerErrorStub,4)}));test("Using the same handler twice should work as before",(function(){var e=this.sandbox.stub().throws("TypeError");s(e);s(e);sinon.assert.calledTwice(e);sinon.assert.calledTwice(this.loggerErrorStub)}))}));