AJS.test.require("jira.webresources:projectpermissions",(function(){"use strict";var e,s=require("jquery"),i=require("underscore"),t=require("jira/project/permissions/permissionschememodel"),r=require("jira/project/permissions/addpermissionmodel"),n=require("jira/project/permissions/permissioncollection"),a=require("jira/project/permissions/securitytypes"),o=require("jira/project/permissions/addpermissionview");module("Dialog rendering",{setup:function(){this.sandbox=sinon.sandbox.create({useFakeServer:!0});s("#qunit-fixture").html(JIRA.Templates.AddProjectPermission.renderPopupContent());var i=function(e){var s=new t({id:12345});s.set("permissions",new n([{permissionKey:"random-permission-key",permissionName:"Random Permission Name"},{permissionKey:"another-permission-key",permissionName:"Another Permission Name"},{permissionKey:"BROWSE_PROJECTS",permissionName:"Browse Projects"}]));var i=new r({permissionSchemeId:s.get("id"),permissionKey:"random-permission-key"});i.fetch();e.requests[0].respond(200,{"Content-Type":"application/json"},JSON.stringify({primarySecurityType:[{displayName:"Project Role Permission",securityType:a.PROJECT_ROLE,values:[{displayValue:"Option A",value:"77777"},{displayValue:"Option B",value:"88888"}]},{displayName:"Application Role Permission",securityType:a.APPLICATION_ROLE,values:[{displayValue:"Option C",value:"44444"},{displayValue:"Option D",value:"55555"}]},{displayName:"Group",securityType:a.GROUP,values:[]}],secondarySecurityType:[{displayName:"Reporter",securityType:a.REPORTER,values:[]}]}));return{schemeModel:s,addModel:i}}(this.sandbox.server);(e=new o({el:"#grant-project-permission-popup",schemeModel:i.schemeModel,model:i.addModel})).open()},teardown:function(){e.close();this.sandbox.restore()},selectPermission:function(e){var i=s("#permission-target-select");i.val(e);i.trigger("change")},selectSecurityType:function(s){e.$el.find("#"+s+"-security-type").attr("checked",!0).click()},assertSecurityWarningIsVisible:function(){ok(e.$el.find("#grant-permission-dialog-security-warning").is(":visible"),"a security warning should be visible")},assertSecurityWarningIsHidden:function(){ok(e.$el.find("#grant-permission-dialog-security-warning").is(":hidden"),"a security warning should be hidden")}});test("Ensure elements are rendered as expected",(function(){strictEqual(e.$el.find("#permission-target-select").size(),1,"element to select the permission should be present");strictEqual(e.$el.find(".security-type-list-content > .radio").not(".secondary").size(),3,"there should be three grant types marked as primary");strictEqual(e.$el.find(".security-type-list-content > .radio.secondary").size(),1,"there should be a single grant type marked as secondary");strictEqual(e.$el.find("#security-type-list-more-opts-btn").is(":visible"),!0,"show more button should be visible");strictEqual(e.$el.find("#grant-permission-dialog-grant-button[aria-disabled=true]").size(),1,"submit button should be disabled");this.assertSecurityWarningIsHidden()}));test("Ensure only the chosen model is pre-selected when the dialog is open",(function(){strictEqual(i.first(e.$el.find("#permission-target-select").val()),e.model.get("permissionKey"),"only the selected permission key should return from the grant combo")}));test("Ensure form controls are correctly enabled/disabled when submit is clicked",(function(){var s=e.$el.find(".security-type-list-content > .radio:first > input");s.attr("checked",!0).click();var i=e.$el.find("#grant-permission-dialog-grant-button");strictEqual(i.attr("aria-disabled"),"false","submit button should be enabled");strictEqual(s.attr("aria-disabled"),void 0,"radio to select permission type should not be aria-disabled");strictEqual(s.attr("disabled"),void 0,"radio to select permission type should not be disabled");i.click();strictEqual(this.sandbox.server.requests.length,2,"a request for granting permission should have been fired");strictEqual(s.attr("aria-disabled"),"true","radio to select permission type should be aria-disabled");strictEqual(s.attr("disabled"),"disabled","radio to select permission type should be disabled")}));test("Ensure data is sent in the right format when form is submitted",(function(){e.$el.find(".security-type-list-content > .radio:first > input").attr("checked",!0).click();e.$el.find("#grant-permission-dialog-grant-button").click();strictEqual(this.sandbox.server.requests.length,2,"a single request should have been fired");var s=JSON.parse(this.sandbox.server.requests[1].requestBody);deepEqual(s.permissionKeys,[e.model.get("permissionKey")],"permissionKeys should be an array of a single element with the chosen permission");strictEqual(s.grants[0].securityType,a.PROJECT_ROLE,"a grant to add project role should have been submitted");strictEqual(s.grants[0].value,"77777","first option was selected and submitted")}));test("Ensure a security warning is displayed when risky config is selected",(function(){this.selectPermission(["another-permission-key","BROWSE_PROJECTS"]);this.selectSecurityType(a.PROJECT_ROLE);this.assertSecurityWarningIsHidden();this.selectSecurityType(a.GROUP);this.assertSecurityWarningIsVisible();this.selectSecurityType(a.APPLICATION_ROLE);this.assertSecurityWarningIsHidden();this.selectSecurityType(a.REPORTER);this.assertSecurityWarningIsHidden();this.selectSecurityType(a.GROUP);this.assertSecurityWarningIsVisible()}));test("Ensure a security warning gets hidden when all permissions are deselected",(function(){this.selectPermission(["another-permission-key","BROWSE_PROJECTS"]);this.selectSecurityType(a.GROUP);this.assertSecurityWarningIsVisible();this.selectPermission([]);this.assertSecurityWarningIsHidden()}))}));